#version 330 core

in vec3 vertex;

out vec3 cameraPosition;

layout(std140) uniform cameraUniforms
{
	mat4 cameraView;
	mat4 cameraProjection;
};

layout(std140) uniform transformUniforms
{
	mat4 modelMat;
};

void main()
{
	gl_Position = cameraProjection * cameraView * modelMat * vec4(vertex, 1.0);
	mat4 inverseCameraView = inverse(cameraView);
	cameraPosition = vec3(inverseCameraView[3][0], inverseCameraView[3][1], inverseCameraView[3][2]);
}