#version 330

layout (points) in;
layout (triangle_strip) out;
layout (max_vertices = 4) out;

uniform mat4 viewProjection;
uniform vec3 cameraPosition;
uniform vec2 scale;

out vec2 uvIn;
out vec3 positionIn;
out vec3 normalIn;

void main()
{
    vec3 position = gl_in[0].gl_Position.xyz;
	vec3 toCamera = normalize(cameraPosition - position);
	
	vec3 up = vec3(0.0, 1.0, 0.0);
	vec3 right = cross(toCamera, up) * scale.x;
	up *= scale.y;
	
	// Add offset to make particle position the centre, not the bottom right
	position += right / 2.0;
	position -= up / 2.0;
	
	position -= right;
	gl_Position = viewProjection * vec4(position, 1.0);
	positionIn = position;
	uvIn = vec2(0.0, 0.0);
	normalIn = toCamera;
	EmitVertex();

	position += up;
	gl_Position = viewProjection * vec4(position, 1.0);
	positionIn = position;
	uvIn = vec2(0.0, 1.0);
	normalIn = toCamera;
	EmitVertex();

	position -= up;
	position += right;
	gl_Position = viewProjection * vec4(position, 1.0);
	positionIn = position;
	uvIn = vec2(1.0, 0.0);
	normalIn = toCamera;
	EmitVertex();

	position += up;
	gl_Position = viewProjection * vec4(position, 1.0);
	positionIn = position;
	uvIn = vec2(1.0, 1.0);
	normalIn = toCamera;
	EmitVertex();

	EndPrimitive();
} 